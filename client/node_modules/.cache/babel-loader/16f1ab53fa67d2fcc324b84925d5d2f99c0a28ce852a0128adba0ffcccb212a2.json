{"ast":null,"code":"export async function uploadAudio(file) {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const res = await fetch('http://localhost:8000/transcribe', {\n      method: 'POST',\n      body: formData\n    });\n    return await res.json();\n  } catch (err) {\n    console.error('Upload Error:', err);\n    return {\n      transcript: ''\n    };\n  }\n}\nexport async function startMicRecording() {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder = new MediaRecorder(stream);\n    const audioChunks = [];\n    return new Promise(resolve => {\n      mediaRecorder.ondataavailable = event => audioChunks.push(event.data);\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        const audioFile = new File([audioBlob], 'recorded.wav', {\n          type: 'audio/wav'\n        });\n        const result = await uploadAudio(audioFile);\n        resolve(result);\n      };\n      mediaRecorder.start();\n      setTimeout(() => mediaRecorder.stop(), 5000);\n    });\n  } catch (error) {\n    console.error('Microphone error:', error);\n    return {\n      transcript: ''\n    };\n  }\n}","map":{"version":3,"names":["uploadAudio","file","formData","FormData","append","res","fetch","method","body","json","err","console","error","transcript","startMicRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","audioChunks","Promise","resolve","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","audioFile","File","result","start","setTimeout","stop"],"sources":["D:/Redhats/AI_Call_Summarization_V2/client/src/audioUtils.js"],"sourcesContent":["export async function uploadAudio(file) {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  try {\r\n    const res = await fetch('http://localhost:8000/transcribe', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    return await res.json();\r\n  } catch (err) {\r\n    console.error('Upload Error:', err);\r\n    return { transcript: '' };\r\n  }\r\n}\r\n\r\nexport async function startMicRecording() {\r\n  try {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const mediaRecorder = new MediaRecorder(stream);\r\n    const audioChunks = [];\r\n\r\n    return new Promise(resolve => {\r\n      mediaRecorder.ondataavailable = event => audioChunks.push(event.data);\r\n      mediaRecorder.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\r\n        const audioFile = new File([audioBlob], 'recorded.wav', { type: 'audio/wav' });\r\n        const result = await uploadAudio(audioFile);\r\n        resolve(result);\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      setTimeout(() => mediaRecorder.stop(), 5000);\r\n    });\r\n  } catch (error) {\r\n    console.error('Microphone error:', error);\r\n    return { transcript: '' };\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,eAAeA,WAAWA,CAACC,IAAI,EAAE;EACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7B,IAAI;IACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IACF,OAAO,MAAMG,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;IACnC,OAAO;MAAEG,UAAU,EAAE;IAAG,CAAC;EAC3B;AACF;AAEA,OAAO,eAAeC,iBAAiBA,CAAA,EAAG;EACxC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzE,MAAMC,aAAa,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;IAC/C,MAAMO,WAAW,GAAG,EAAE;IAEtB,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;MAC5BJ,aAAa,CAACK,eAAe,GAAGC,KAAK,IAAIJ,WAAW,CAACK,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;MACrER,aAAa,CAACS,MAAM,GAAG,YAAY;QACjC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACT,WAAW,EAAE;UAAEU,IAAI,EAAE;QAAY,CAAC,CAAC;QAC9D,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACJ,SAAS,CAAC,EAAE,cAAc,EAAE;UAAEE,IAAI,EAAE;QAAY,CAAC,CAAC;QAC9E,MAAMG,MAAM,GAAG,MAAMnC,WAAW,CAACiC,SAAS,CAAC;QAC3CT,OAAO,CAACW,MAAM,CAAC;MACjB,CAAC;MAEDf,aAAa,CAACgB,KAAK,CAAC,CAAC;MACrBC,UAAU,CAAC,MAAMjB,aAAa,CAACkB,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;IAC9C,CAAC,CAAC;EACJ,CAAC,CAAC,OAAO1B,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO;MAAEC,UAAU,EAAE;IAAG,CAAC;EAC3B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
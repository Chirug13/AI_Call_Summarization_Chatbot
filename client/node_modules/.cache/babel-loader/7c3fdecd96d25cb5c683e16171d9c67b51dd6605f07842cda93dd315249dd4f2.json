{"ast":null,"code":"var _jsxFileName = \"D:\\\\Redhats\\\\AI_Call_Summarization_V2\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { setupSilenceDetection } from './audioUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const [chatLog, setChatLog] = useState([]);\n  const [transcript, setTranscript] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n    document.body.className = theme === 'light' ? 'dark' : 'light';\n  };\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = mediaRecorder;\n    chunksRef.current = [];\n    mediaRecorder.ondataavailable = e => {\n      if (e.data.size > 0) chunksRef.current.push(e.data);\n    };\n    mediaRecorder.onstop = async () => {\n      const blob = new Blob(chunksRef.current, {\n        type: 'audio/wav'\n      });\n      const formData = new FormData();\n      formData.append('file', blob, 'recording.wav');\n      const res = await fetch('http://localhost:8000/transcribe', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      setTranscript(data.transcript || 'Transcription failed');\n      addToChat('User', data.transcript || '...');\n      const chatRes = await fetch('http://localhost:8000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: data.transcript\n        })\n      });\n      const chatData = await chatRes.json();\n      addToChat('Bot', chatData.response || '...');\n    };\n    mediaRecorder.start();\n    setIsRecording(true);\n    setupSilenceDetection(stream, () => {\n      mediaRecorder.stop();\n      setIsRecording(false);\n    });\n  };\n  const addToChat = (sender, text) => {\n    setChatLog(prev => [...prev, {\n      sender,\n      text,\n      timestamp: new Date().toLocaleTimeString()\n    }]);\n  };\n  const exportChat = async type => {\n    const res = await fetch(`http://localhost:8000/export/${type}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        chat: chatLog\n      })\n    });\n    const blob = await res.blob();\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `chat.${type === 'pdf' ? 'pdf' : 'docx'}`;\n    a.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFA7 AI Call Summarizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRecording,\n          disabled: isRecording,\n          children: isRecording ? 'Listening...' : '🎙️ Start Mic'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          children: [\"Toggle \", theme === 'light' ? '🌙 Dark' : '☀️ Light']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportChat('pdf'),\n          children: \"Export PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportChat('word'),\n          children: \"Export Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: chatLog.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-msg ${msg.sender.toLowerCase()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), \" \", msg.text, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: msg.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z6a+3vzA5cqejciovaL0ln0wSYY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","setupSilenceDetection","jsxDEV","_jsxDEV","App","_s","theme","setTheme","chatLog","setChatLog","transcript","setTranscript","isRecording","setIsRecording","mediaRecorderRef","chunksRef","toggleTheme","prev","document","body","className","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","current","ondataavailable","e","data","size","push","onstop","blob","Blob","type","formData","FormData","append","res","fetch","method","json","addToChat","chatRes","headers","JSON","stringify","prompt","chatData","response","start","stop","sender","text","timestamp","Date","toLocaleTimeString","exportChat","chat","url","window","URL","createObjectURL","a","createElement","href","download","click","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","msg","i","toLowerCase","_c","$RefreshReg$"],"sources":["D:/Redhats/AI_Call_Summarization_V2/client/src/App.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './App.css';\r\nimport { setupSilenceDetection } from './audioUtils';\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState('light');\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const chunksRef = useRef([]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\r\n    document.body.className = theme === 'light' ? 'dark' : 'light';\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const mediaRecorder = new MediaRecorder(stream);\r\n    mediaRecorderRef.current = mediaRecorder;\r\n    chunksRef.current = [];\r\n\r\n    mediaRecorder.ondataavailable = e => {\r\n      if (e.data.size > 0) chunksRef.current.push(e.data);\r\n    };\r\n\r\n    mediaRecorder.onstop = async () => {\r\n      const blob = new Blob(chunksRef.current, { type: 'audio/wav' });\r\n      const formData = new FormData();\r\n      formData.append('file', blob, 'recording.wav');\r\n\r\n      const res = await fetch('http://localhost:8000/transcribe', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      const data = await res.json();\r\n      setTranscript(data.transcript || 'Transcription failed');\r\n      addToChat('User', data.transcript || '...');\r\n\r\n      const chatRes = await fetch('http://localhost:8000/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ prompt: data.transcript })\r\n      });\r\n      const chatData = await chatRes.json();\r\n      addToChat('Bot', chatData.response || '...');\r\n    };\r\n\r\n    mediaRecorder.start();\r\n    setIsRecording(true);\r\n\r\n    setupSilenceDetection(stream, () => {\r\n      mediaRecorder.stop();\r\n      setIsRecording(false);\r\n    });\r\n  };\r\n\r\n  const addToChat = (sender, text) => {\r\n    setChatLog(prev => [...prev, { sender, text, timestamp: new Date().toLocaleTimeString() }]);\r\n  };\r\n\r\n  const exportChat = async (type) => {\r\n    const res = await fetch(`http://localhost:8000/export/${type}`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ chat: chatLog })\r\n    });\r\n    const blob = await res.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `chat.${type === 'pdf' ? 'pdf' : 'docx'}`;\r\n    a.click();\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${theme}`}>\r\n      <header className=\"app-header\">\r\n        <h1>🎧 AI Call Summarizer</h1>\r\n        <div className=\"controls\">\r\n          <button onClick={startRecording} disabled={isRecording}>\r\n            {isRecording ? 'Listening...' : '🎙️ Start Mic'}\r\n          </button>\r\n          <button onClick={toggleTheme}>\r\n            Toggle {theme === 'light' ? '🌙 Dark' : '☀️ Light'}\r\n          </button>\r\n          <button onClick={() => exportChat('pdf')}>Export PDF</button>\r\n          <button onClick={() => exportChat('word')}>Export Word</button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"chat-window\">\r\n        {chatLog.map((msg, i) => (\r\n          <div key={i} className={`chat-msg ${msg.sender.toLowerCase()}`}>\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n            <span className=\"timestamp\">{msg.timestamp}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
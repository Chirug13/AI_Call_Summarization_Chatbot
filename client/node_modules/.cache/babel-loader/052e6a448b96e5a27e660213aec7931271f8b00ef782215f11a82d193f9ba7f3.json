{"ast":null,"code":"let mediaRecorder;\nlet audioChunks = [];\nlet silenceTimer;\nlet streamRef;\nexport function startMicRecording(onStop) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      streamRef = stream;\n      mediaRecorder = new MediaRecorder(stream);\n      audioChunks = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) audioChunks.push(event.data);\n      };\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: \"audio/webm\"\n        });\n        if (onStop) onStop(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n      mediaRecorder.start();\n      setupSilenceDetection(stream, () => {\n        stopMicRecording(); // auto-stop on silence\n      });\n      resolve();\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nexport function stopMicRecording() {\n  if (mediaRecorder && mediaRecorder.state !== \"inactive\") {\n    mediaRecorder.stop();\n  }\n  if (streamRef) {\n    streamRef.getTracks().forEach(track => track.stop());\n  }\n  if (silenceTimer) {\n    clearTimeout(silenceTimer);\n  }\n}\nexport function setupSilenceDetection(stream, onSilence, threshold = 0.01, delay = 3000) {\n  const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  const source = audioContext.createMediaStreamSource(stream);\n  const analyser = audioContext.createAnalyser();\n  source.connect(analyser);\n  const data = new Uint8Array(analyser.fftSize);\n  const checkSilence = () => {\n    analyser.getByteTimeDomainData(data);\n    const maxVolume = Math.max(...data.map(v => Math.abs(v - 128) / 128));\n    if (maxVolume < threshold) {\n      silenceTimer = setTimeout(() => {\n        onSilence();\n      }, delay);\n    } else {\n      clearTimeout(silenceTimer);\n      silenceTimer = null;\n    }\n    requestAnimationFrame(checkSilence);\n  };\n  checkSilence();\n}","map":{"version":3,"names":["mediaRecorder","audioChunks","silenceTimer","streamRef","startMicRecording","onStop","Promise","resolve","reject","stream","navigator","mediaDevices","getUserMedia","audio","MediaRecorder","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","getTracks","forEach","track","stop","start","setupSilenceDetection","stopMicRecording","error","state","clearTimeout","onSilence","threshold","delay","audioContext","window","AudioContext","webkitAudioContext","source","createMediaStreamSource","analyser","createAnalyser","connect","Uint8Array","fftSize","checkSilence","getByteTimeDomainData","maxVolume","Math","max","map","v","abs","setTimeout","requestAnimationFrame"],"sources":["D:/Redhats/AI_Call_Summarization_V2/client/src/audioUtils.js"],"sourcesContent":["let mediaRecorder;\nlet audioChunks = [];\nlet silenceTimer;\nlet streamRef;\n\nexport function startMicRecording(onStop) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      streamRef = stream;\n\n      mediaRecorder = new MediaRecorder(stream);\n      audioChunks = [];\n\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) audioChunks.push(event.data);\n      };\n\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunks, { type: \"audio/webm\" });\n        if (onStop) onStop(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n\n      mediaRecorder.start();\n      setupSilenceDetection(stream, () => {\n        stopMicRecording(); // auto-stop on silence\n      });\n\n      resolve();\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\nexport function stopMicRecording() {\n  if (mediaRecorder && mediaRecorder.state !== \"inactive\") {\n    mediaRecorder.stop();\n  }\n  if (streamRef) {\n    streamRef.getTracks().forEach(track => track.stop());\n  }\n  if (silenceTimer) {\n    clearTimeout(silenceTimer);\n  }\n}\n\nexport function setupSilenceDetection(stream, onSilence, threshold = 0.01, delay = 3000) {\n  const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  const source = audioContext.createMediaStreamSource(stream);\n  const analyser = audioContext.createAnalyser();\n  source.connect(analyser);\n\n  const data = new Uint8Array(analyser.fftSize);\n\n  const checkSilence = () => {\n    analyser.getByteTimeDomainData(data);\n    const maxVolume = Math.max(...data.map(v => Math.abs(v - 128) / 128));\n\n    if (maxVolume < threshold) {\n      silenceTimer = setTimeout(() => {\n        onSilence();\n      }, delay);\n    } else {\n      clearTimeout(silenceTimer);\n      silenceTimer = null;\n    }\n\n    requestAnimationFrame(checkSilence);\n  };\n\n  checkSilence();\n}"],"mappings":"AAAA,IAAIA,aAAa;AACjB,IAAIC,WAAW,GAAG,EAAE;AACpB,IAAIC,YAAY;AAChB,IAAIC,SAAS;AAEb,OAAO,SAASC,iBAAiBA,CAACC,MAAM,EAAE;EACxC,OAAO,IAAIC,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;IAC5C,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzEV,SAAS,GAAGM,MAAM;MAElBT,aAAa,GAAG,IAAIc,aAAa,CAACL,MAAM,CAAC;MACzCR,WAAW,GAAG,EAAE;MAEhBD,aAAa,CAACe,eAAe,GAAGC,KAAK,IAAI;QACvC,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,GAAG,CAAC,EAAEjB,WAAW,CAACkB,IAAI,CAACH,KAAK,CAACC,IAAI,CAAC;MACvD,CAAC;MAEDjB,aAAa,CAACoB,MAAM,GAAG,MAAM;QAC3B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACrB,WAAW,EAAE;UAAEsB,IAAI,EAAE;QAAa,CAAC,CAAC;QAC/D,IAAIlB,MAAM,EAAEA,MAAM,CAACgB,SAAS,CAAC;QAC7BZ,MAAM,CAACe,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACnD,CAAC;MAED3B,aAAa,CAAC4B,KAAK,CAAC,CAAC;MACrBC,qBAAqB,CAACpB,MAAM,EAAE,MAAM;QAClCqB,gBAAgB,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC;MAEFvB,OAAO,CAAC,CAAC;IACX,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdvB,MAAM,CAACuB,KAAK,CAAC;IACf;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,SAASD,gBAAgBA,CAAA,EAAG;EACjC,IAAI9B,aAAa,IAAIA,aAAa,CAACgC,KAAK,KAAK,UAAU,EAAE;IACvDhC,aAAa,CAAC2B,IAAI,CAAC,CAAC;EACtB;EACA,IAAIxB,SAAS,EAAE;IACbA,SAAS,CAACqB,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;EACtD;EACA,IAAIzB,YAAY,EAAE;IAChB+B,YAAY,CAAC/B,YAAY,CAAC;EAC5B;AACF;AAEA,OAAO,SAAS2B,qBAAqBA,CAACpB,MAAM,EAAEyB,SAAS,EAAEC,SAAS,GAAG,IAAI,EAAEC,KAAK,GAAG,IAAI,EAAE;EACvF,MAAMC,YAAY,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC;EAC7E,MAAMC,MAAM,GAAGJ,YAAY,CAACK,uBAAuB,CAACjC,MAAM,CAAC;EAC3D,MAAMkC,QAAQ,GAAGN,YAAY,CAACO,cAAc,CAAC,CAAC;EAC9CH,MAAM,CAACI,OAAO,CAACF,QAAQ,CAAC;EAExB,MAAM1B,IAAI,GAAG,IAAI6B,UAAU,CAACH,QAAQ,CAACI,OAAO,CAAC;EAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBL,QAAQ,CAACM,qBAAqB,CAAChC,IAAI,CAAC;IACpC,MAAMiC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGnC,IAAI,CAACoC,GAAG,CAACC,CAAC,IAAIH,IAAI,CAACI,GAAG,CAACD,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IAErE,IAAIJ,SAAS,GAAGf,SAAS,EAAE;MACzBjC,YAAY,GAAGsD,UAAU,CAAC,MAAM;QAC9BtB,SAAS,CAAC,CAAC;MACb,CAAC,EAAEE,KAAK,CAAC;IACX,CAAC,MAAM;MACLH,YAAY,CAAC/B,YAAY,CAAC;MAC1BA,YAAY,GAAG,IAAI;IACrB;IAEAuD,qBAAqB,CAACT,YAAY,CAAC;EACrC,CAAC;EAEDA,YAAY,CAAC,CAAC;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
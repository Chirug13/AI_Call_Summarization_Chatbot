{"ast":null,"code":"var _jsxFileName = \"D:\\\\Redhats\\\\AI_Call_Summarization_V2\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport MicRecorder from 'mic-recorder-to-mp3';\nimport WaveSurfer from 'wavesurfer.js';\nimport { FaMicrophone, FaFilePdf, FaUpload, FaUserCircle, FaRobot } from 'react-icons/fa';\nimport { setupSilenceDetection } from './utils/audioUtils';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst recorder = new MicRecorder({\n  bitRate: 128\n});\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [transcription, setTranscription] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingSeconds, setRecordingSeconds] = useState(30);\n  const [audioUrl, setAudioUrl] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const intervalRef = useRef(null);\n  const chatWindowRef = useRef(null);\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const cleanupSilenceDetection = useRef(null);\n  useEffect(() => {\n    if (chatWindowRef.current) {\n      chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\n    }\n  }, [messages]);\n  useEffect(() => {\n    if (audioUrl && waveformRef.current) {\n      if (wavesurfer.current) {\n        wavesurfer.current.destroy();\n      }\n      wavesurfer.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: '#aaa',\n        progressColor: '#4fc3f7',\n        responsive: true,\n        height: 60\n      });\n      wavesurfer.current.load(audioUrl);\n    }\n  }, [audioUrl]);\n  const handleSend = async () => {\n    if (!input.trim() || !transcription) return;\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsTyping(true);\n    const res = await fetch('http://localhost:8000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: input,\n        context: transcription\n      })\n    });\n    const data = await res.json();\n    setMessages(prev => [...prev, {\n      text: data.response,\n      sender: 'bot'\n    }]);\n    setIsTyping(false);\n  };\n  const handleToneAnalysis = async () => {\n    if (!transcription) return alert(\"Please upload or record audio first.\");\n    setIsTyping(true);\n    const res = await fetch('http://localhost:8000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: 'Analyze the emotional tone or sentiment of the following transcript:',\n        context: transcription\n      })\n    });\n    const data = await res.json();\n    setMessages(prev => [...prev, {\n      text: `ðŸ§  Tone Analysis: ${data.response}`,\n      sender: 'bot'\n    }]);\n    setIsTyping(false);\n  };\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('audio', file);\n    const res = await fetch('http://localhost:8000/transcribe', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await res.json();\n    if (!data.transcription || data.transcription.includes(\"No voice detected\")) {\n      alert(\"No voice detected in the audio.\");\n    }\n    setTranscription(data.transcription || '');\n  };\n  const handlePDFExport = async () => {\n    if (!transcription) return alert(\"Please upload or record audio first.\");\n    const res = await fetch('http://localhost:8000/export/pdf', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: transcription\n      })\n    });\n    const data = await res.json();\n    if (data.file) {\n      window.open('http://localhost:8000/' + data.file, '_blank');\n    } else {\n      alert(\"PDF generation failed.\");\n    }\n  };\n  const stopRecording = async () => {\n    const [buffer, blob] = await recorder.stop().getMp3();\n    const file = new File([blob], \"mic_recording.mp3\", {\n      type: \"audio/mp3\"\n    });\n    const url = URL.createObjectURL(blob);\n    setAudioUrl(url);\n    setIsRecording(false);\n    setRecordingSeconds(30);\n    clearInterval(intervalRef.current);\n    if (cleanupSilenceDetection.current) cleanupSilenceDetection.current();\n    const formData = new FormData();\n    formData.append(\"audio\", file);\n    const res = await fetch(\"http://localhost:8000/transcribe\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    const text = data.transcription || '';\n    if (!text || text.includes(\"No voice detected\")) {\n      alert(\"No voice detected in the audio.\");\n      return;\n    }\n    setTranscription(text);\n\n    // ðŸ”¥ Auto-send transcription as chat query\n    const userMessage = {\n      text,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsTyping(true);\n    const replyRes = await fetch(\"http://localhost:8000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt: text,\n        context: text\n      })\n    });\n    const replyData = await replyRes.json();\n    setMessages(prev => [...prev, {\n      text: replyData.response,\n      sender: 'bot'\n    }]);\n    setIsTyping(false);\n  };\n  const handleMicClick = async () => {\n    if (!isRecording) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        await recorder.start();\n        setIsRecording(true);\n        cleanupSilenceDetection.current = setupSilenceDetection(stream, stopRecording);\n        intervalRef.current = setInterval(() => {\n          setRecordingSeconds(prev => {\n            if (prev <= 1) {\n              stopRecording();\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      } catch (err) {\n        console.error(\"Mic error:\", err);\n        alert(\"Microphone access denied.\");\n      }\n    } else {\n      stopRecording();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo192.png\",\n        alt: \"Logo\",\n        className: \"w-24 h-24 rounded-full mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"action-button cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(FaUpload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".mp3,.wav\",\n            onChange: handleFileUpload,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm mt-1\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handleMicClick,\n          children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm mt-1\",\n            children: isRecording ? `Recording... (${recordingSeconds}s)` : 'Microphone'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handlePDFExport,\n          children: [/*#__PURE__*/_jsxDEV(FaFilePdf, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm mt-1\",\n            children: \"Export PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handleToneAnalysis,\n          children: [\"\\uD83E\\uDDE0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm mt-1\",\n            children: \"Analyze Tone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-3xl text-gray-300 mt-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDCCC How to use:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload or record audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Interact via chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Analyze tone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Export summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/call_center.jpg\",\n        alt: \"Call Center\",\n        className: \"w-full mt-4 rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: \"AI Call Summarization Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        ref: chatWindowRef,\n        children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.sender}`,\n          children: [msg.sender === 'user' ? 'ðŸ§‘' : 'ðŸ¤–', /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message bot\",\n          children: [\"\\uD83E\\uDD16 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"typing-indicator\",\n            children: \"Typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleSend(),\n          placeholder: \"Ask about the call...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: waveformRef,\n        className: \"waveform-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcription-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"mb-1\",\n          children: \"Transcript Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"scrollable-box\",\n          value: transcription,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FIt6mAfvFg8sXH1xJEwSmoqVnEA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MicRecorder","WaveSurfer","FaMicrophone","FaFilePdf","FaUpload","FaUserCircle","FaRobot","setupSilenceDetection","jsxDEV","_jsxDEV","recorder","bitRate","App","_s","messages","setMessages","input","setInput","transcription","setTranscription","isRecording","setIsRecording","recordingSeconds","setRecordingSeconds","audioUrl","setAudioUrl","isTyping","setIsTyping","intervalRef","chatWindowRef","waveformRef","wavesurfer","cleanupSilenceDetection","current","scrollTop","scrollHeight","destroy","create","container","waveColor","progressColor","responsive","height","load","handleSend","trim","userMessage","text","sender","prev","res","fetch","method","headers","body","JSON","stringify","prompt","context","data","json","response","handleToneAnalysis","alert","handleFileUpload","e","file","target","files","formData","FormData","append","includes","handlePDFExport","window","open","stopRecording","buffer","blob","stop","getMp3","File","type","url","URL","createObjectURL","clearInterval","replyRes","replyData","handleMicClick","stream","navigator","mediaDevices","getUserMedia","audio","start","setInterval","err","console","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","hidden","onClick","ref","map","msg","i","value","onKeyDown","key","placeholder","readOnly","_c","$RefreshReg$"],"sources":["D:/Redhats/AI_Call_Summarization_V2/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport MicRecorder from 'mic-recorder-to-mp3';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport {\r\n  FaMicrophone,\r\n  FaFilePdf,\r\n  FaUpload,\r\n  FaUserCircle,\r\n  FaRobot\r\n} from 'react-icons/fa';\r\nimport { setupSilenceDetection } from './utils/audioUtils';\r\nimport './App.css';\r\n\r\nconst recorder = new MicRecorder({ bitRate: 128 });\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [transcription, setTranscription] = useState('');\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recordingSeconds, setRecordingSeconds] = useState(30);\r\n  const [audioUrl, setAudioUrl] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const intervalRef = useRef(null);\r\n  const chatWindowRef = useRef(null);\r\n  const waveformRef = useRef(null);\r\n  const wavesurfer = useRef(null);\r\n  const cleanupSilenceDetection = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chatWindowRef.current) {\r\n      chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (audioUrl && waveformRef.current) {\r\n      if (wavesurfer.current) {\r\n        wavesurfer.current.destroy();\r\n      }\r\n      wavesurfer.current = WaveSurfer.create({\r\n        container: waveformRef.current,\r\n        waveColor: '#aaa',\r\n        progressColor: '#4fc3f7',\r\n        responsive: true,\r\n        height: 60,\r\n      });\r\n      wavesurfer.current.load(audioUrl);\r\n    }\r\n  }, [audioUrl]);\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim() || !transcription) return;\r\n    const userMessage = { text: input, sender: 'user' };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput('');\r\n    setIsTyping(true);\r\n\r\n    const res = await fetch('http://localhost:8000/chat', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ prompt: input, context: transcription })\r\n    });\r\n    const data = await res.json();\r\n    setMessages(prev => [...prev, { text: data.response, sender: 'bot' }]);\r\n    setIsTyping(false);\r\n  };\r\n\r\n  const handleToneAnalysis = async () => {\r\n    if (!transcription) return alert(\"Please upload or record audio first.\");\r\n    setIsTyping(true);\r\n    const res = await fetch('http://localhost:8000/chat', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        prompt: 'Analyze the emotional tone or sentiment of the following transcript:',\r\n        context: transcription\r\n      })\r\n    });\r\n    const data = await res.json();\r\n    setMessages(prev => [...prev, { text: `ðŸ§  Tone Analysis: ${data.response}`, sender: 'bot' }]);\r\n    setIsTyping(false);\r\n  };\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('audio', file);\r\n\r\n    const res = await fetch('http://localhost:8000/transcribe', {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (!data.transcription || data.transcription.includes(\"No voice detected\")) {\r\n      alert(\"No voice detected in the audio.\");\r\n    }\r\n    setTranscription(data.transcription || '');\r\n  };\r\n\r\n  const handlePDFExport = async () => {\r\n    if (!transcription) return alert(\"Please upload or record audio first.\");\r\n    const res = await fetch('http://localhost:8000/export/pdf', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ prompt: transcription })\r\n    });\r\n    const data = await res.json();\r\n    if (data.file) {\r\n      window.open('http://localhost:8000/' + data.file, '_blank');\r\n    } else {\r\n      alert(\"PDF generation failed.\");\r\n    }\r\n  };\r\n\r\n  const stopRecording = async () => {\r\n    const [buffer, blob] = await recorder.stop().getMp3();\r\n    const file = new File([blob], \"mic_recording.mp3\", { type: \"audio/mp3\" });\r\n    const url = URL.createObjectURL(blob);\r\n    setAudioUrl(url);\r\n    setIsRecording(false);\r\n    setRecordingSeconds(30);\r\n    clearInterval(intervalRef.current);\r\n    if (cleanupSilenceDetection.current) cleanupSilenceDetection.current();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", file);\r\n    const res = await fetch(\"http://localhost:8000/transcribe\", {\r\n      method: \"POST\",\r\n      body: formData\r\n    });\r\n    const data = await res.json();\r\n    const text = data.transcription || '';\r\n\r\n    if (!text || text.includes(\"No voice detected\")) {\r\n      alert(\"No voice detected in the audio.\");\r\n      return;\r\n    }\r\n\r\n    setTranscription(text);\r\n\r\n    // ðŸ”¥ Auto-send transcription as chat query\r\n    const userMessage = { text, sender: 'user' };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setIsTyping(true);\r\n\r\n    const replyRes = await fetch(\"http://localhost:8000/chat\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ prompt: text, context: text })\r\n    });\r\n    const replyData = await replyRes.json();\r\n\r\n    setMessages(prev => [...prev, { text: replyData.response, sender: 'bot' }]);\r\n    setIsTyping(false);\r\n  };\r\n\r\n  const handleMicClick = async () => {\r\n    if (!isRecording) {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        await recorder.start();\r\n        setIsRecording(true);\r\n\r\n        cleanupSilenceDetection.current = setupSilenceDetection(stream, stopRecording);\r\n\r\n        intervalRef.current = setInterval(() => {\r\n          setRecordingSeconds(prev => {\r\n            if (prev <= 1) {\r\n              stopRecording();\r\n              return 0;\r\n            }\r\n            return prev - 1;\r\n          });\r\n        }, 1000);\r\n      } catch (err) {\r\n        console.error(\"Mic error:\", err);\r\n        alert(\"Microphone access denied.\");\r\n      }\r\n    } else {\r\n      stopRecording();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* Left Panel */}\r\n      <div className=\"left-panel\">\r\n        <img src=\"/logo192.png\" alt=\"Logo\" className=\"w-24 h-24 rounded-full mb-2\" />\r\n        <div className=\"space-y-3 w-full\">\r\n          <label className=\"action-button cursor-pointer\">\r\n            <FaUpload />\r\n            <input type=\"file\" accept=\".mp3,.wav\" onChange={handleFileUpload} hidden />\r\n            <span className=\"text-sm mt-1\">Upload</span>\r\n          </label>\r\n\r\n          <button className=\"action-button\" onClick={handleMicClick}>\r\n            <FaMicrophone />\r\n            <span className=\"text-sm mt-1\">\r\n              {isRecording ? `Recording... (${recordingSeconds}s)` : 'Microphone'}\r\n            </span>\r\n          </button>\r\n\r\n          <button className=\"action-button\" onClick={handlePDFExport}>\r\n            <FaFilePdf />\r\n            <span className=\"text-sm mt-1\">Export PDF</span>\r\n          </button>\r\n\r\n          <button className=\"action-button\" onClick={handleToneAnalysis}>\r\n            ðŸ§ \r\n            <span className=\"text-sm mt-1\">Analyze Tone</span>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"text-3xl text-gray-300 mt-4 text-center\">\r\n          <p>ðŸ“Œ How to use:</p>\r\n          <p>Upload or record audio</p>\r\n          <p>Interact via chat</p>\r\n          <p>Analyze tone</p>\r\n          <p>Export summary</p>\r\n        </div>\r\n        <img src=\"/call_center.jpg\" alt=\"Call Center\" className=\"w-full mt-4 rounded-lg\" />\r\n      </div>\r\n\r\n      {/* Center Chat Panel */}\r\n      <div className=\"center-panel\">\r\n        <div className=\"chat-title\">AI Call Summarization Chatbot</div>\r\n        <div className=\"chat-window\" ref={chatWindowRef}>\r\n          {messages.map((msg, i) => (\r\n            <div key={i} className={`chat-message ${msg.sender}`}>\r\n              {msg.sender === 'user' ? 'ðŸ§‘' : 'ðŸ¤–'}\r\n              <span>{msg.text}</span>\r\n            </div>\r\n          ))}\r\n          {isTyping && (\r\n            <div className=\"chat-message bot\">\r\n              ðŸ¤– <span className=\"typing-indicator\">Typing...</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"chat-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            onKeyDown={e => e.key === 'Enter' && handleSend()}\r\n            placeholder=\"Ask about the call...\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right Panel */}\r\n      <div className=\"right-panel\">\r\n        <div ref={waveformRef} className=\"waveform-preview\" />\r\n        <div className=\"transcription-box\">\r\n          <strong className=\"mb-1\">Transcript Preview</strong>\r\n          <textarea\r\n            className=\"scrollable-box\"\r\n            value={transcription}\r\n            readOnly\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/utils/audioUtils.js\nexport function setupSilenceDetection(stream, onSilence, threshold = 0.01, delay = 3000) {\n  const audioContext = new AudioContext();\n  const analyser = audioContext.createAnalyser();\n  const source = audioContext.createMediaStreamSource(stream);\n  const processor = audioContext.createScriptProcessor(2048, 1, 1);\n  let silenceStart = performance.now();\n  let triggered = false;\n  analyser.fftSize = 2048;\n  source.connect(analyser);\n  analyser.connect(processor);\n  processor.connect(audioContext.destination);\n  processor.onaudioprocess = () => {\n    const data = new Uint8Array(analyser.fftSize);\n    analyser.getByteTimeDomainData(data);\n    const normalized = data.map(val => (val - 128) / 128);\n    const volume = Math.max(...normalized.map(Math.abs));\n    if (volume < threshold) {\n      if (performance.now() - silenceStart > delay && !triggered) {\n        triggered = true;\n        onSilence();\n        processor.disconnect();\n        analyser.disconnect();\n      }\n    } else {\n      silenceStart = performance.now();\n    }\n  };\n  return () => {\n    processor.disconnect();\n    analyser.disconnect();\n    source.disconnect();\n    audioContext.close();\n  };\n}","map":{"version":3,"names":["setupSilenceDetection","stream","onSilence","threshold","delay","audioContext","AudioContext","analyser","createAnalyser","source","createMediaStreamSource","processor","createScriptProcessor","silenceStart","performance","now","triggered","fftSize","connect","destination","onaudioprocess","data","Uint8Array","getByteTimeDomainData","normalized","map","val","volume","Math","max","abs","disconnect","close"],"sources":["D:/Redhats/AI_Call_Summarization_V2/client/src/utils/audioUtils.js"],"sourcesContent":["// src/utils/audioUtils.js\r\nexport function setupSilenceDetection(stream, onSilence, threshold = 0.01, delay = 3000) {\r\n  const audioContext = new AudioContext();\r\n  const analyser = audioContext.createAnalyser();\r\n  const source = audioContext.createMediaStreamSource(stream);\r\n  const processor = audioContext.createScriptProcessor(2048, 1, 1);\r\n\r\n  let silenceStart = performance.now();\r\n  let triggered = false;\r\n\r\n  analyser.fftSize = 2048;\r\n  source.connect(analyser);\r\n  analyser.connect(processor);\r\n  processor.connect(audioContext.destination);\r\n\r\n  processor.onaudioprocess = () => {\r\n    const data = new Uint8Array(analyser.fftSize);\r\n    analyser.getByteTimeDomainData(data);\r\n    const normalized = data.map(val => (val - 128) / 128);\r\n    const volume = Math.max(...normalized.map(Math.abs));\r\n\r\n    if (volume < threshold) {\r\n      if (performance.now() - silenceStart > delay && !triggered) {\r\n        triggered = true;\r\n        onSilence();\r\n        processor.disconnect();\r\n        analyser.disconnect();\r\n      }\r\n    } else {\r\n      silenceStart = performance.now();\r\n    }\r\n  };\r\n\r\n  return () => {\r\n    processor.disconnect();\r\n    analyser.disconnect();\r\n    source.disconnect();\r\n    audioContext.close();\r\n  };\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,SAASA,qBAAqBA,CAACC,MAAM,EAAEC,SAAS,EAAEC,SAAS,GAAG,IAAI,EAAEC,KAAK,GAAG,IAAI,EAAE;EACvF,MAAMC,YAAY,GAAG,IAAIC,YAAY,CAAC,CAAC;EACvC,MAAMC,QAAQ,GAAGF,YAAY,CAACG,cAAc,CAAC,CAAC;EAC9C,MAAMC,MAAM,GAAGJ,YAAY,CAACK,uBAAuB,CAACT,MAAM,CAAC;EAC3D,MAAMU,SAAS,GAAGN,YAAY,CAACO,qBAAqB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EAEhE,IAAIC,YAAY,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC;EACpC,IAAIC,SAAS,GAAG,KAAK;EAErBT,QAAQ,CAACU,OAAO,GAAG,IAAI;EACvBR,MAAM,CAACS,OAAO,CAACX,QAAQ,CAAC;EACxBA,QAAQ,CAACW,OAAO,CAACP,SAAS,CAAC;EAC3BA,SAAS,CAACO,OAAO,CAACb,YAAY,CAACc,WAAW,CAAC;EAE3CR,SAAS,CAACS,cAAc,GAAG,MAAM;IAC/B,MAAMC,IAAI,GAAG,IAAIC,UAAU,CAACf,QAAQ,CAACU,OAAO,CAAC;IAC7CV,QAAQ,CAACgB,qBAAqB,CAACF,IAAI,CAAC;IACpC,MAAMG,UAAU,GAAGH,IAAI,CAACI,GAAG,CAACC,GAAG,IAAI,CAACA,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IACrD,MAAMC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGL,UAAU,CAACC,GAAG,CAACG,IAAI,CAACE,GAAG,CAAC,CAAC;IAEpD,IAAIH,MAAM,GAAGxB,SAAS,EAAE;MACtB,IAAIW,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGF,YAAY,GAAGT,KAAK,IAAI,CAACY,SAAS,EAAE;QAC1DA,SAAS,GAAG,IAAI;QAChBd,SAAS,CAAC,CAAC;QACXS,SAAS,CAACoB,UAAU,CAAC,CAAC;QACtBxB,QAAQ,CAACwB,UAAU,CAAC,CAAC;MACvB;IACF,CAAC,MAAM;MACLlB,YAAY,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC;IAClC;EACF,CAAC;EAED,OAAO,MAAM;IACXJ,SAAS,CAACoB,UAAU,CAAC,CAAC;IACtBxB,QAAQ,CAACwB,UAAU,CAAC,CAAC;IACrBtB,MAAM,CAACsB,UAAU,CAAC,CAAC;IACnB1B,YAAY,CAAC2B,KAAK,CAAC,CAAC;EACtB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}